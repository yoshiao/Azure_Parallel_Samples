//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Notice: Use of the service proxies that accompany this notice is subject to
//            the terms and conditions of the license agreement located at
//            http://go.microsoft.com/fwlink/?LinkID=202740&clcid=0x409
//            If you do not agree to these terms you may not use this content.
namespace WorldBank {
    using System;
    using System.Collections.Generic;
    using System.Data.Services.Client;
    using System.Net;
    using System.IO;
    
    
    public partial class CountryEntity {
        
        private String _CodeIso3Letter;
        
        private String _CodeIso2Letter;
        
        private String _Name;
        
        private String _RegionCode;
        
        private String _RegionName;
        
        private String _IncomeLevelId;
        
        private String _IncomeLevelName;
        
        private String _LendingTypeCode;
        
        private String _LendingTypeName;
        
        private String _CapitalCity;
        
        private Double? _Latitude;
        
        private Double? _Longitude;
        
        public String CodeIso3Letter {
            get {
                return this._CodeIso3Letter;
            }
            set {
                this._CodeIso3Letter = value;
            }
        }
        
        public String CodeIso2Letter {
            get {
                return this._CodeIso2Letter;
            }
            set {
                this._CodeIso2Letter = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        public String RegionCode {
            get {
                return this._RegionCode;
            }
            set {
                this._RegionCode = value;
            }
        }
        
        public String RegionName {
            get {
                return this._RegionName;
            }
            set {
                this._RegionName = value;
            }
        }
        
        public String IncomeLevelId {
            get {
                return this._IncomeLevelId;
            }
            set {
                this._IncomeLevelId = value;
            }
        }
        
        public String IncomeLevelName {
            get {
                return this._IncomeLevelName;
            }
            set {
                this._IncomeLevelName = value;
            }
        }
        
        public String LendingTypeCode {
            get {
                return this._LendingTypeCode;
            }
            set {
                this._LendingTypeCode = value;
            }
        }
        
        public String LendingTypeName {
            get {
                return this._LendingTypeName;
            }
            set {
                this._LendingTypeName = value;
            }
        }
        
        public String CapitalCity {
            get {
                return this._CapitalCity;
            }
            set {
                this._CapitalCity = value;
            }
        }
        
        public Double? Latitude {
            get {
                return this._Latitude;
            }
            set {
                this._Latitude = value;
            }
        }
        
        public Double? Longitude {
            get {
                return this._Longitude;
            }
            set {
                this._Longitude = value;
            }
        }
    }
    
    public partial class DataEntity {
        
        private String _IndicatorCode;
        
        private String _IndicatorName;
        
        private String _CountryCode;
        
        private String _CountryName;
        
        private String _Date;
        
        private String _Value;
        
        public String IndicatorCode {
            get {
                return this._IndicatorCode;
            }
            set {
                this._IndicatorCode = value;
            }
        }
        
        public String IndicatorName {
            get {
                return this._IndicatorName;
            }
            set {
                this._IndicatorName = value;
            }
        }
        
        public String CountryCode {
            get {
                return this._CountryCode;
            }
            set {
                this._CountryCode = value;
            }
        }
        
        public String CountryName {
            get {
                return this._CountryName;
            }
            set {
                this._CountryName = value;
            }
        }
        
        public String Date {
            get {
                return this._Date;
            }
            set {
                this._Date = value;
            }
        }
        
        public String Value {
            get {
                return this._Value;
            }
            set {
                this._Value = value;
            }
        }
    }
    
    public partial class DataSourceEntity {
        
        private Int32 _Id;
        
        private String _Name;
        
        private String _Description;
        
        private String _Url;
        
        public Int32 Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        public String Description {
            get {
                return this._Description;
            }
            set {
                this._Description = value;
            }
        }
        
        public String Url {
            get {
                return this._Url;
            }
            set {
                this._Url = value;
            }
        }
    }
    
    public partial class IncomeLevelEntity {
        
        private String _Id;
        
        private String _Name;
        
        public String Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
    }
    
    public partial class IndicatorEntity {
        
        private String _Code;
        
        private String _Name;
        
        private String _DataSourceId;
        
        private String _DataSourceName;
        
        private String _SourceNote;
        
        private String _SourceOrganization;
        
        public String Code {
            get {
                return this._Code;
            }
            set {
                this._Code = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        public String DataSourceId {
            get {
                return this._DataSourceId;
            }
            set {
                this._DataSourceId = value;
            }
        }
        
        public String DataSourceName {
            get {
                return this._DataSourceName;
            }
            set {
                this._DataSourceName = value;
            }
        }
        
        public String SourceNote {
            get {
                return this._SourceNote;
            }
            set {
                this._SourceNote = value;
            }
        }
        
        public String SourceOrganization {
            get {
                return this._SourceOrganization;
            }
            set {
                this._SourceOrganization = value;
            }
        }
    }
    
    public partial class LendingTypeEntity {
        
        private String _Code;
        
        private String _Name;
        
        public String Code {
            get {
                return this._Code;
            }
            set {
                this._Code = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
    }
    
    public partial class RegionEntity {
        
        private String _Code;
        
        private String _Name;
        
        public String Code {
            get {
                return this._Code;
            }
            set {
                this._Code = value;
            }
        }
        
        public String Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
    }
    
    public partial class TopicEntity {
        
        private Int32 _Id;
        
        private String _Value;
        
        private String _SourceNote;
        
        public Int32 Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        
        public String Value {
            get {
                return this._Value;
            }
            set {
                this._Value = value;
            }
        }
        
        public String SourceNote {
            get {
                return this._SourceNote;
            }
            set {
                this._SourceNote = value;
            }
        }
    }
    
    public partial class WorldDevelopmentIndicatorsContainer : System.Data.Services.Client.DataServiceContext {
        
        public WorldDevelopmentIndicatorsContainer(Uri serviceRoot) : 
                base(serviceRoot) {
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<CountryEntity> GetCountries(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<CountryEntity> query;
            query = base.CreateQuery<CountryEntity>("GetCountries");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        /// <param name="RegionCode">Code returned from GetRegions (2 or 3 letter). Sample Values : EAP</param>
        public DataServiceQuery<CountryEntity> GetCountriesByRegion(String LanguageCode, String RegionCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            if ((RegionCode == null)) {
                throw new System.ArgumentNullException("RegionCode", "RegionCode value cannot be null");
            }
            DataServiceQuery<CountryEntity> query;
            query = base.CreateQuery<CountryEntity>("GetCountriesByRegion");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            if ((RegionCode != null)) {
                query = query.AddQueryOption("RegionCode", string.Concat("\'", RegionCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        /// <param name="CountryCode">Code returned from GetCountries (2 or 3 letter). Sample Values : AFG</param>
        /// <param name="IndicatorCode">Code returned from GetIndicators. Sample Values : AG.AGR.TRAC.NO</param>
        public DataServiceQuery<DataEntity> GetData(String LanguageCode, String CountryCode, String IndicatorCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            if ((CountryCode == null)) {
                throw new System.ArgumentNullException("CountryCode", "CountryCode value cannot be null");
            }
            if ((IndicatorCode == null)) {
                throw new System.ArgumentNullException("IndicatorCode", "IndicatorCode value cannot be null");
            }
            DataServiceQuery<DataEntity> query;
            query = base.CreateQuery<DataEntity>("GetData");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            if ((CountryCode != null)) {
                query = query.AddQueryOption("CountryCode", string.Concat("\'", CountryCode, "\'"));
            }
            if ((IndicatorCode != null)) {
                query = query.AddQueryOption("IndicatorCode", string.Concat("\'", IndicatorCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<DataSourceEntity> GetDataSources(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<DataSourceEntity> query;
            query = base.CreateQuery<DataSourceEntity>("GetDataSources");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<IncomeLevelEntity> GetIncomeLevels(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<IncomeLevelEntity> query;
            query = base.CreateQuery<IncomeLevelEntity>("GetIncomeLevels");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<IndicatorEntity> GetIndicators(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<IndicatorEntity> query;
            query = base.CreateQuery<IndicatorEntity>("GetIndicators");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        /// <param name="DataSourceId">Id returned from GetDataSources. Sample Values : 1</param>
        public DataServiceQuery<IndicatorEntity> GetIndicatorsByDataSource(String LanguageCode, Int32 DataSourceId) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<IndicatorEntity> query;
            query = base.CreateQuery<IndicatorEntity>("GetIndicatorsByDataSource").AddQueryOption("DataSourceId", DataSourceId);
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        /// <param name="TopicId">Id returned from GetTopics. Sample Values : 1</param>
        public DataServiceQuery<IndicatorEntity> GetIndicatorsByTopic(String LanguageCode, Int32 TopicId) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<IndicatorEntity> query;
            query = base.CreateQuery<IndicatorEntity>("GetIndicatorsByTopic").AddQueryOption("TopicId", TopicId);
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<LendingTypeEntity> GetLendingTypes(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<LendingTypeEntity> query;
            query = base.CreateQuery<LendingTypeEntity>("GetLendingTypes");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<RegionEntity> GetRegions(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<RegionEntity> query;
            query = base.CreateQuery<RegionEntity>("GetRegions");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
        
        /// <summary>
        /// </summary>
        /// <param name="LanguageCode">Language code can be: English (en), Spanish (es), French (fr), Arabic (ar).</param>
        public DataServiceQuery<TopicEntity> GetTopics(String LanguageCode) {
            if ((LanguageCode == null)) {
                throw new System.ArgumentNullException("LanguageCode", "LanguageCode value cannot be null");
            }
            DataServiceQuery<TopicEntity> query;
            query = base.CreateQuery<TopicEntity>("GetTopics");
            if ((LanguageCode != null)) {
                query = query.AddQueryOption("LanguageCode", string.Concat("\'", LanguageCode, "\'"));
            }
            return query;
        }
    }
}
